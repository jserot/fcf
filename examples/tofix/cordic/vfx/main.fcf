const arctan : signed<32> array[32] = {
    900000000, -- 45.00000000 * 20000000
    531301023, 
    280724869, 
    142500326, 
    71526687, 
    35798212, 
    17903474, 
    8952283, 
    4476210, 
    2238113, 
    1119057, 
    559529, 
    279764, 
    139882, 
    69941, 
    34970, 
    17485, 
    8742, 
    4371, 
    2185, 
    1092, 
    546, 
    273, 
    136, 
    68, 
    34, 
    17, 
    8, 
    4, 
    2, 
    1, 
    0 }; 

const x0: signed<32> array[32] = {
    1414213562, -- 0.70710678 * 200000000
    1264911064, 
    1227143982, 
    1217667825, 
    1215296512, 
    1214703540, 
    1214555288, 
    1214518224, 
    1214508958, 
    1214506642, 
    1214506063, 
    1214505918, 
    1214505882, 
    1214505873, 
    1214505870, 
    1214505870, 
    1214505870, 
    1214505870, 
    1214505870, 
    1214505870, 
    1214505870, 
    1214505870, 
    1214505870, 
    1214505870, 
    1214505870, 
    1214505870, 
    1214505870, 
    1214505870, 
    1214505870, 
    1214505870, 
    1214505870, 
    1214505870 } ; 

let cordic (niter:int, phi:signed<32>) =
  let compute (i, a, x:signed<32>, y:signed<32>) = 
  | i >= niter -> return (x,y)
  | a < phi  -> compute (i+1, a+arctan[i], x-y>>i, y+x>>i)
  | a >= phi -> compute (i+1, a-arctan[i], x+y>>i, y-x>>i) in
  compute (0, 0, x0[niter-1], 0)
;

cordic(31,1200000000); -- 1200000000 = 60*20000000
