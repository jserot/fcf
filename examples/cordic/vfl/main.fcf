const arctan : float array[32] = {
  45.0000000000000000,
  26.5650511770779900,
  14.0362434679264769,
  7.1250163489017977,
  3.5763343749973515,
  1.7899106082460694,
  0.8951737102110744,
  0.4476141708605531,
  0.2238105003685381,
  0.1119056770662069,
  0.0559528918938037,
  0.0279764526170037,
  0.0139882271422650,
  0.0069941136753529,
  0.0034970568507040,
  0.0017485284269804,
  0.0008742642136938,
  0.0004371321068723,
  0.0002185660534393,
  0.0001092830267201,
  0.0000546415133601,
  0.0000273207566800,
  0.0000136603783400,
  0.0000068301891700,
  0.0000034150945850,
  0.0000017075472925,
  0.0000008537736463,
  0.0000004268868231,
  0.0000002134434116,
  0.0000001067217058,
  0.0000000533608529,
  0.0000000266804264 };

const x0: float array[32] = {
  0.7071067811865476,
  0.6324555320336759,
  0.6135719910778964,
  0.6088339125177524,
  0.6076482562561683,
  0.6073517701412960,
  0.6072776440935261,
  0.6072591122988928,
  0.6072544793325625,
  0.6072533210898753,
  0.6072530315291345,
  0.6072529591389449,
  0.6072529410413973,
  0.6072529365170104,
  0.6072529353859136,
  0.6072529351031395,
  0.6072529350324459,
  0.6072529350147725,
  0.6072529350103542,
  0.6072529350092496,
  0.6072529350089735,
  0.6072529350089044,
  0.6072529350088872,
  0.6072529350088829,
  0.6072529350088818,
  0.6072529350088816,
  0.6072529350088814,
  0.6072529350088814,
  0.6072529350088814,
  0.6072529350088814,
  0.6072529350088814,
  0.6072529350088814 };

fsm cordic (niter:int, phi:float) =
  let compute (i,a,x,y,d) = 
  | i >= niter -> return (x,y)
  | a <. phi  -> compute (i+1, a+.arctan[i], x-.y*.d, y+.x*.d, d/.2.)
  | a >=. phi -> compute (i+1, a-.arctan[i], x+.y*.d, y-.x*.d, d/.2.) in
  compute (0, 0., x0[niter-1], 0., 1.)
;

let sin,cos = cordic(31,60.0);
